/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Word = string;
export type Definition = string;
export type Entryid = string;
export type SortingForm = number[];
export type Theme = string;
export type SecondaryTheme = string;
export type Img = string;
export type Description = string;
export type Filename = string;
export type Audio = Audio1[];
export type DefinitionAudio = Audio1[];
export type ExampleSentence = string[];
export type ExampleSentenceDefinition = string[];
export type ExampleSentenceAudio = Audio1[];
export type ExampleSentenceDefinitionAudio = Audio1[];
export type Source = string;

/**
 * There is a DictionaryEntry created for each entry in your dictionary.
 * It intentionally shares the same data structure as the ParserTargets,
 * but allows for extra fields. This is the same as DictionaryEntry except with
 * some specifications for the output format (for example every exported entry will have)
 * a value for entryID, and a sorting_form).
 */
export interface DictionaryEntryExportFormat {
  word: Word;
  definition: Definition;
  entryID: Entryid;
  sorting_form: SortingForm;
  theme?: Theme;
  secondary_theme?: SecondaryTheme;
  img?: Img;
  audio?: Audio;
  definition_audio?: DefinitionAudio;
  example_sentence?: ExampleSentence;
  example_sentence_definition?: ExampleSentenceDefinition;
  example_sentence_audio?: ExampleSentenceAudio;
  example_sentence_definition_audio?: ExampleSentenceDefinitionAudio;
  optional?: Optional;
  source?: Source;
  [k: string]: unknown;
}
export interface Audio1 {
  description?: Description;
  filename: Filename;
}
export interface Optional {
  [k: string]: string;
}
